MODULE main
VAR
    action: { mark, cut, copy, paste, clear };
    selection: boolean;
    clipboard: { clean, full };

ASSIGN
    -- action is completely non-deterministic.
    -- action is supplied by the environment.

    init(selection) := FALSE;
    next(selection) := case
        (action = mark)  : TRUE;
        (action = clear) : FALSE;
        TRUE : selection;
    esac;

    init(clipboard) := clean;
    next(clipboard) := case
        (selection & (action = cut | action = copy)) : full;
        TRUE : clipboard;
    esac;

-- CTL expressions

-- there DOES exist a path in which clipboard is full infinitely often!
CTLSPEC AG EF (clipboard = full);

-- clipboard CANNOT be full in all future paths all the time!
CTLSPEC !AG AF (clipboard = full);

-- there DOES NOT exist a path in which clipboard is clean infinitely often! 
CTLSPEC !AG EF (clipboard = clean);
CTLSPEC AG EF (clipboard != clean);

-- once the clipboard is filled, it stays filled forever!s
CTLSPEC AG EF ((clipboard = full) -> AF AG (clipboard = full));
CTLSPEC AG EF ((clipboard = full) -> AG (clipboard = full));

-- LTL expressions
-- selection followed by cut or copy operation fills the clipboard
LTLSPEC G F((selection & action = copy) -> F (clipboard = full));
LTLSPEC G F((selection & action = cut) -> F G(clipboard = full));

-- once filled, the clipboard stays filled forever
LTLSPEC G F((clipboard = full) -> F G (clipboard = full));
LTLSPEC G F((clipboard = full) -> G (clipboard = full));
